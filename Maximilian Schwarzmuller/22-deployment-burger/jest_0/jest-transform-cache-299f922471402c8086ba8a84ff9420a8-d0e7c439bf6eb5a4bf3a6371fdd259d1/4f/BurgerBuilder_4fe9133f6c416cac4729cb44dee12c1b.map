{"version":3,"sources":["BurgerBuilder.js"],"names":["BurgerBuilder","Component","state","purchasing","updatePurchaseState","ingredients","sumOfAllIngredients","Object","keys","map","ingredientsKey","reduce","sum","element","purchaseHandler","props","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","componentDidMount","onInitIngredients","render","disableInformation","key","orderSummary","burger","error","marginLeft","type","onIngredientAdded","onIngredientRemoved","totalPrice","mapStateToProps","burgerBuilder","auth","token","mapDispatchToProps","dispatch","ingredientName","actions","addIngredient","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath","axios"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sumOfAllIngredients = Object.keys(ingredients)\n            .map(ingredientsKey => {\n                return ingredients[ingredientsKey];\n            })\n            .reduce((sum, element) => {\n                return sum + element;\n            }, 0)\n        return sumOfAllIngredients > 0\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({ purchasing: true })\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disableInformation = {\n            ...this.props.ingredients\n        }\n\n        for (let key in disableInformation) {\n            disableInformation[key] = disableInformation[key] <= 0;\n        }\n\n        let orderSummary = null;\n        let burger = this.props.error ? <big style={{ marginLeft: '35%' }}>Ingredients can't be loaded!</big> : <Spinner />;\n\n        if (this.props.ingredients) {\n            burger = <Aux>\n                <Burger ingredients={this.props.ingredients} />\n                <BuildControls\n                    ingredientAdded={(type) => this.props.onIngredientAdded(type)}\n                    ingredientRemoved={(type) => this.props.onIngredientRemoved(type)}\n                    disabled={disableInformation}\n                    price={this.props.totalPrice}\n                    purchasable={this.updatePurchaseState(this.props.ingredients)}\n                    ordered={this.purchaseHandler}\n                    isAuth={this.props.isAuthenticated}\n                />\n            </Aux>\n            orderSummary = <OrderSummary\n                ingredients={this.props.ingredients}\n                price={this.props.totalPrice}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler}\n            />;\n        }\n        return (\n            <Aux>\n                <Modal\n                    show={this.state.purchasing}\n                    modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux >\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null,\n    };\n}\n// dispatch-able props\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIngredientAdded: (ingredientName) => dispatch(actions.addIngredient(ingredientName)),\n        onIngredientRemoved: (ingredientName) => dispatch(actions.removeIngredient(ingredientName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));"]}