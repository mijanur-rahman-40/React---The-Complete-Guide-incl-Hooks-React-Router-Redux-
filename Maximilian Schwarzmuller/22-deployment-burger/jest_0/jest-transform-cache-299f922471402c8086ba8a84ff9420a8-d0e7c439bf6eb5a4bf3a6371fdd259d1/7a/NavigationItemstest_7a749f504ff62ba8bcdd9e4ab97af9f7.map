{"version":3,"sources":["NavigationItems.test.js"],"names":["adapter","Adapter","describe","wrapper","beforeEach","it","expect","find","NavigationItem","toHaveLength","setProps","isAuthenticated","contains","toEqual"],"mappings":";;;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;AAEA,uBAAU;AAAEA,EAAAA,OAAO,EAAE,IAAIC,2BAAJ;AAAX,CAAV;AAEAC,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AAClC,MAAIC,OAAJ,CADkC,CAEtC;;AACIC,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAG,qBAAQ,6BAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAV;AACH,GAFS,CAAV;AAIAE,EAAAA,EAAE,CAAC,oEAAD,EAAuE,MAAM;AAC3EC,IAAAA,MAAM,CAACH,OAAO,CAACI,IAAR,CAAaC,uBAAb,CAAD,CAAN,CAAqCC,YAArC,CAAkD,CAAlD;AACH,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,kEAAD,EAAqE,MAAM;AACzE;AACAF,IAAAA,OAAO,CAACO,QAAR,CAAiB;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAjB;AACAL,IAAAA,MAAM,CAACH,OAAO,CAACI,IAAR,CAAaC,uBAAb,CAAD,CAAN,CAAqCC,YAArC,CAAkD,CAAlD;AACH,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACtCF,IAAAA,OAAO,CAACO,QAAR,CAAiB;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAjB;AACAL,IAAAA,MAAM,CAACH,OAAO,CAACS,QAAR,CAAiB,6BAAC,uBAAD;AAAgB,MAAA,IAAI,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB,CAAD,CAAN,CAAiFC,OAAjF,CAAyF,IAAzF;AACH,GAHC,CAAF;AAIH,CArBO,CAAR","sourcesContent":["// no need to import packages because create-react-already used those\nimport React from 'react';\n\nimport { configure, shallow } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nimport NavigationItems from './NavigationItems';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconfigure({ adapter: new Adapter() });\n\ndescribe('<NavigationItems />', () => {\n    let wrapper;\n// \n    beforeEach(() => {\n        wrapper = shallow(<NavigationItems />);\n    });\n\n    it('should render two <NavigationItem /> elements if not authenticated', () => {\n        expect(wrapper.find(NavigationItem)).toHaveLength(2);\n    });\n\n    it('should render three <NavigationItem /> elements if authenticated', () => {\n        // wrapper = shallow(<NavigationItems isAuthenticated />);\n        wrapper.setProps({ isAuthenticated: true });\n        expect(wrapper.find(NavigationItem)).toHaveLength(3);\n    });\n\n    it('should an exact logout button', () => {\n        wrapper.setProps({ isAuthenticated: true });\n        expect(wrapper.contains(<NavigationItem link=\"/logout\">Logout</NavigationItem>)).toEqual(true);\n    });\n});"]}