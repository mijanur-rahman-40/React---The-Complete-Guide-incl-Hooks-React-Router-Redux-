{"version":3,"sources":["auth.js"],"names":["authStart","type","actionTypes","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return (dispatch) => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000);\n    }\n}\n\nexport const auth = (email, password, isSignUp) => {\n    return (dispatch) => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBnJo-bBVOZZa4T_SWTdYyerQPqiOYKIzo';\n        if (!isSignUp) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBnJo-bBVOZZa4T_SWTdYyerQPqiOYKIzo';\n        }\n        axios.post(url, authData)\n            .then(response => {\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn))\n            })\n            .catch(error => {\n                dispatch(authFail(error.response.data.error))\n            });\n    }\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return (dispatch) => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                // getting remaining time\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n};"]}