{"version":3,"sources":["order.js"],"names":["purchaseBurgerSuccess","id","orderData","type","actionTypes","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","axios","post","then","response","console","log","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParams","get","fetchedOrders","key","push"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEO,MAAMA,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACpD,SAAO;AACHC,IAAAA,IAAI,EAAEC,WAAW,CAACC,uBADf;AAEHC,IAAAA,OAAO,EAAEL,EAFN;AAGHC,IAAAA,SAAS,EAAEA;AAHR,GAAP;AAKH,CANM;;;;AAQA,MAAMK,kBAAkB,GAAIC,KAAD,IAAW;AACzC,SAAO;AACHL,IAAAA,IAAI,EAAEC,WAAW,CAACK,oBADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;;;;AAOA,MAAME,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHP,IAAAA,IAAI,EAAEC,WAAW,CAACO;AADf,GAAP;AAGH,CAJM;;;;AAMA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQX,SAAR,KAAsB;AAChD,SAAOY,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,mBAAmB,EAApB,CAAR;;AACAK,yBAAMC,IAAN,CAAW,uBAAuBH,KAAlC,EAAyCX,SAAzC,EACKe,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,IAA1B;AACAR,MAAAA,QAAQ,CAACd,qBAAqB,CAACkB,QAAQ,CAACG,IAAT,CAAcC,IAAf,EAAqBpB,SAArB,CAAtB,CAAR;AACH,KAJL,EAKKqB,KALL,CAKWf,KAAK,IAAI;AACZM,MAAAA,QAAQ,CAACP,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACH,KAPL;AAQH,GAVD;AAWH,CAZM;;;;AAcA,MAAMgB,YAAY,GAAG,MAAM;AAC9B,SAAO;AACHrB,IAAAA,IAAI,EAAEC,WAAW,CAACqB;AADf,GAAP;AAGH,CAJM;;;;AAMA,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;AAC1C,SAAO;AACHxB,IAAAA,IAAI,EAAEC,WAAW,CAACwB,oBADf;AAEHD,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;;;;AAOA,MAAME,eAAe,GAAIrB,KAAD,IAAW;AACtC,SAAO;AACHL,IAAAA,IAAI,EAAEC,WAAW,CAAC0B,iBADf;AAEHtB,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;;;;AAOA,MAAMuB,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACH5B,IAAAA,IAAI,EAAEC,WAAW,CAAC4B;AADf,GAAP;AAGH,CAJM;;;;AAMA,MAAMC,WAAW,GAAG,CAACpB,KAAD,EAAQqB,MAAR,KAAmB;AAC1C,SAAQpB,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACiB,gBAAgB,EAAjB,CAAR,CADiB,CAEjB;;AACA,UAAMI,WAAW,GAAG,WAAWtB,KAAX,GAAmB,6BAAnB,GAAmDqB,MAAnD,GAA4D,GAAhF;;AACAnB,yBAAMqB,GAAN,CAAU,iBAAiBD,WAA3B,EACKlB,IADL,CACUC,QAAQ,IAAI;AACd,YAAMmB,aAAa,GAAG,EAAtB;;AACA,WAAK,IAAIC,GAAT,IAAgBpB,QAAQ,CAACG,IAAzB,EAA+B;AAC3BgB,QAAAA,aAAa,CAACE,IAAd,iCACOrB,QAAQ,CAACG,IAAT,CAAciB,GAAd,CADP;AAEIrC,UAAAA,EAAE,EAAEqC;AAFR;AAIH;;AACDxB,MAAAA,QAAQ,CAACY,kBAAkB,CAACW,aAAD,CAAnB,CAAR;AACH,KAVL,EAWKd,KAXL,CAWWf,KAAK,IAAI;AACZM,MAAAA,QAAQ,CAACe,eAAe,CAACrB,KAAD,CAAhB,CAAR;AACH,KAbL;AAcH,GAlBD;AAmBH,CApBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (token, orderData) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then(response => {\n                console.log(response.data.name);\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return (dispatch) => {\n        dispatch(fetchOrdersStart());\n        // to filter data from firebase by api end point have to change rules into firebase db\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n            .then(response => {\n                const fetchedOrders = [];\n                for (let key in response.data) {\n                    fetchedOrders.push({\n                        ...response.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(error => {\n                dispatch(fetchOrdersFail(error));\n            });\n    };\n};"]}