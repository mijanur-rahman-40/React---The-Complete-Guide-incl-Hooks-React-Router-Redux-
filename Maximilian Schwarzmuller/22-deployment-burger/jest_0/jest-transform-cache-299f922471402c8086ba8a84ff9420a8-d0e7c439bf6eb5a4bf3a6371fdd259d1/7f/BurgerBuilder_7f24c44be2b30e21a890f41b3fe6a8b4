134d914abe0bb651b3cff31a3ad743cb
"use strict";

var _interopRequireDefault = require("/home/mijanur/MYCODE/JAVASCRIPT/REACTJS/react-courses-master/Maximilian Schwarzmuller/21-testing/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/mijanur/MYCODE/JAVASCRIPT/REACTJS/react-courses-master/Maximilian Schwarzmuller/21-testing/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BurgerBuilder = void 0;

var _objectSpread2 = _interopRequireDefault(require("/home/mijanur/MYCODE/JAVASCRIPT/REACTJS/react-courses-master/Maximilian Schwarzmuller/21-testing/node_modules/@babel/runtime/helpers/objectSpread2"));

var _react = _interopRequireWildcard(require("react"));

var _axiosOrders = _interopRequireDefault(require("../../axios-orders"));

var _reactRedux = require("react-redux");

var _Aux = _interopRequireDefault(require("../../hoc/Aux/Aux"));

var _Burger = _interopRequireDefault(require("../../components/Burger/Burger"));

var _BuildControls = _interopRequireDefault(require("../../components/Burger/BuildControls/BuildControls"));

var _Modal = _interopRequireDefault(require("../../components/UI/Modal/Modal"));

var _OrderSummary = _interopRequireDefault(require("../../components/Burger/OrderSummary/OrderSummary"));

var _Spinner = _interopRequireDefault(require("../../components/UI/Spinner/Spinner"));

var _withErrorHandler = _interopRequireDefault(require("../../hoc/withErrorHandler/withErrorHandler"));

var actions = _interopRequireWildcard(require("../../store/actions/index"));

var _jsxFileName = "/home/mijanur/MYCODE/JAVASCRIPT/REACTJS/react-courses-master/Maximilian Schwarzmuller/21-testing/src/containers/BurgerBuilder/BurgerBuilder.js";

class BurgerBuilder extends _react.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      purchasing: false
    };

    this.updatePurchaseState = ingredients => {
      const sumOfAllIngredients = Object.keys(ingredients).map(ingredientsKey => {
        return ingredients[ingredientsKey];
      }).reduce((sum, element) => {
        return sum + element;
      }, 0);
      return sumOfAllIngredients > 0;
    };

    this.purchaseHandler = () => {
      if (this.props.isAuthenticated) {
        this.setState({
          purchasing: true
        });
      } else {
        this.props.onSetAuthRedirectPath('/checkout');
        this.props.history.push('/auth');
      }
    };

    this.purchaseCancelHandler = () => {
      this.setState({
        purchasing: false
      });
    };

    this.purchaseContinueHandler = () => {
      this.props.onInitPurchase();
      this.props.history.push('/checkout');
    };
  }

  componentDidMount() {
    this.props.onInitIngredients();
  }

  render() {
    const disableInformation = (0, _objectSpread2.default)({}, this.props.ingredients);

    for (let key in disableInformation) {
      disableInformation[key] = disableInformation[key] <= 0;
    }

    let orderSummary = null;
    let burger = this.props.error ? _react.default.createElement("big", {
      style: {
        marginLeft: '35%'
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 61
      },
      __self: this
    }, "Ingredients can't be loaded!") : _react.default.createElement(_Spinner.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 61
      },
      __self: this
    });

    if (this.props.ingredients) {
      burger = _react.default.createElement(_Aux.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 64
        },
        __self: this
      }, _react.default.createElement(_Burger.default, {
        ingredients: this.props.ingredients,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65
        },
        __self: this
      }), _react.default.createElement(_BuildControls.default, {
        ingredientAdded: type => this.props.onIngredientAdded(type),
        ingredientRemoved: type => this.props.onIngredientRemoved(type),
        disabled: disableInformation,
        price: this.props.totalPrice,
        purchasable: this.updatePurchaseState(this.props.ingredients),
        ordered: this.purchaseHandler,
        isAuth: this.props.isAuthenticated,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 66
        },
        __self: this
      }));
      orderSummary = _react.default.createElement(_OrderSummary.default, {
        ingredients: this.props.ingredients,
        price: this.props.totalPrice,
        purchaseCancelled: this.purchaseCancelHandler,
        purchaseContinued: this.purchaseContinueHandler,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 76
        },
        __self: this
      });
    }

    return _react.default.createElement(_Aux.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84
      },
      __self: this
    }, _react.default.createElement(_Modal.default, {
      show: this.state.purchasing,
      modalClosed: this.purchaseCancelHandler,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 85
      },
      __self: this
    }, orderSummary), burger);
  }

}

exports.BurgerBuilder = BurgerBuilder;

const mapStateToProps = state => {
  return {
    ingredients: state.burgerBuilder.ingredients,
    totalPrice: state.burgerBuilder.totalPrice,
    error: state.burgerBuilder.error,
    isAuthenticated: state.auth.token !== null
  };
}; // dispatch-able props


const mapDispatchToProps = dispatch => {
  return {
    onIngredientAdded: ingredientName => dispatch(actions.addIngredient(ingredientName)),
    onIngredientRemoved: ingredientName => dispatch(actions.removeIngredient(ingredientName)),
    onInitIngredients: () => dispatch(actions.initIngredients()),
    onInitPurchase: () => dispatch(actions.purchaseInit()),
    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _withErrorHandler.default)(BurgerBuilder, _axiosOrders.default));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,