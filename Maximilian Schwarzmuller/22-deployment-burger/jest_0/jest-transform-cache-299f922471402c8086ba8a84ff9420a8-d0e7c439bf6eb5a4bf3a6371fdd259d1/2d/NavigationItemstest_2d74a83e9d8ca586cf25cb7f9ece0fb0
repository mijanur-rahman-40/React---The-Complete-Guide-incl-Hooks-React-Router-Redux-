744a959d126ee1d9214254e442fb0eaa
"use strict";

var _interopRequireDefault = require("/home/mijanur/MYCODE/JAVASCRIPT/REACTJS/react-courses-master/Maximilian Schwarzmuller/21-testing/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _NavigationItems = _interopRequireDefault(require("./NavigationItems"));

var _NavigationItem = _interopRequireDefault(require("./NavigationItem/NavigationItem"));

var _jsxFileName = "/home/mijanur/MYCODE/JAVASCRIPT/REACTJS/react-courses-master/Maximilian Schwarzmuller/21-testing/src/components/Navigation/NavigationItems/NavigationItems.test.js";
(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact.default()
});
describe('<NavigationItems />', () => {
  let wrapper; // run bef 

  beforeEach(() => {
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_NavigationItems.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 16
      },
      __self: void 0
    }));
  });
  it('should render two <NavigationItem /> elements if not authenticated', () => {
    expect(wrapper.find(_NavigationItem.default)).toHaveLength(2);
  });
  it('should render three <NavigationItem /> elements if authenticated', () => {
    // wrapper = shallow(<NavigationItems isAuthenticated />);
    wrapper.setProps({
      isAuthenticated: true
    });
    expect(wrapper.find(_NavigationItem.default)).toHaveLength(3);
  });
  it('should an exact logout button', () => {
    wrapper.setProps({
      isAuthenticated: true
    });
    expect(wrapper.contains(_react.default.createElement(_NavigationItem.default, {
      link: "/logout",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 31
      },
      __self: void 0
    }, "Logout"))).toEqual(true);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdmlnYXRpb25JdGVtcy50ZXN0LmpzIl0sIm5hbWVzIjpbImFkYXB0ZXIiLCJBZGFwdGVyIiwiZGVzY3JpYmUiLCJ3cmFwcGVyIiwiYmVmb3JlRWFjaCIsIml0IiwiZXhwZWN0IiwiZmluZCIsIk5hdmlnYXRpb25JdGVtIiwidG9IYXZlTGVuZ3RoIiwic2V0UHJvcHMiLCJpc0F1dGhlbnRpY2F0ZWQiLCJjb250YWlucyIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7Ozs7QUFDQTs7QUFFQTs7QUFDQTs7QUFFQTs7QUFDQTs7O0FBRUEsdUJBQVU7QUFBRUEsRUFBQUEsT0FBTyxFQUFFLElBQUlDLDJCQUFKO0FBQVgsQ0FBVjtBQUVBQyxRQUFRLENBQUMscUJBQUQsRUFBd0IsTUFBTTtBQUNsQyxNQUFJQyxPQUFKLENBRGtDLENBRW5DOztBQUNDQyxFQUFBQSxVQUFVLENBQUMsTUFBTTtBQUNiRCxJQUFBQSxPQUFPLEdBQUcscUJBQVEsNkJBQUMsd0JBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFBUixDQUFWO0FBQ0gsR0FGUyxDQUFWO0FBSUFFLEVBQUFBLEVBQUUsQ0FBQyxvRUFBRCxFQUF1RSxNQUFNO0FBQzNFQyxJQUFBQSxNQUFNLENBQUNILE9BQU8sQ0FBQ0ksSUFBUixDQUFhQyx1QkFBYixDQUFELENBQU4sQ0FBcUNDLFlBQXJDLENBQWtELENBQWxEO0FBQ0gsR0FGQyxDQUFGO0FBSUFKLEVBQUFBLEVBQUUsQ0FBQyxrRUFBRCxFQUFxRSxNQUFNO0FBQ3pFO0FBQ0FGLElBQUFBLE9BQU8sQ0FBQ08sUUFBUixDQUFpQjtBQUFFQyxNQUFBQSxlQUFlLEVBQUU7QUFBbkIsS0FBakI7QUFDQUwsSUFBQUEsTUFBTSxDQUFDSCxPQUFPLENBQUNJLElBQVIsQ0FBYUMsdUJBQWIsQ0FBRCxDQUFOLENBQXFDQyxZQUFyQyxDQUFrRCxDQUFsRDtBQUNILEdBSkMsQ0FBRjtBQU1BSixFQUFBQSxFQUFFLENBQUMsK0JBQUQsRUFBa0MsTUFBTTtBQUN0Q0YsSUFBQUEsT0FBTyxDQUFDTyxRQUFSLENBQWlCO0FBQUVDLE1BQUFBLGVBQWUsRUFBRTtBQUFuQixLQUFqQjtBQUNBTCxJQUFBQSxNQUFNLENBQUNILE9BQU8sQ0FBQ1MsUUFBUixDQUFpQiw2QkFBQyx1QkFBRDtBQUFnQixNQUFBLElBQUksRUFBQyxTQUFyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkFBakIsQ0FBRCxDQUFOLENBQWlGQyxPQUFqRixDQUF5RixJQUF6RjtBQUNILEdBSEMsQ0FBRjtBQUlILENBckJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBubyBuZWVkIHRvIGltcG9ydCBwYWNrYWdlcyBiZWNhdXNlIGNyZWF0ZS1yZWFjdC1hbHJlYWR5IHVzZWQgdGhvc2VcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGNvbmZpZ3VyZSwgc2hhbGxvdyB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgQWRhcHRlciBmcm9tICdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNic7XG5cbmltcG9ydCBOYXZpZ2F0aW9uSXRlbXMgZnJvbSAnLi9OYXZpZ2F0aW9uSXRlbXMnO1xuaW1wb3J0IE5hdmlnYXRpb25JdGVtIGZyb20gJy4vTmF2aWdhdGlvbkl0ZW0vTmF2aWdhdGlvbkl0ZW0nO1xuXG5jb25maWd1cmUoeyBhZGFwdGVyOiBuZXcgQWRhcHRlcigpIH0pO1xuXG5kZXNjcmliZSgnPE5hdmlnYXRpb25JdGVtcyAvPicsICgpID0+IHtcbiAgICBsZXQgd3JhcHBlcjtcbiAgIC8vIHJ1biBiZWYgXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIHdyYXBwZXIgPSBzaGFsbG93KDxOYXZpZ2F0aW9uSXRlbXMgLz4pO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZW5kZXIgdHdvIDxOYXZpZ2F0aW9uSXRlbSAvPiBlbGVtZW50cyBpZiBub3QgYXV0aGVudGljYXRlZCcsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KHdyYXBwZXIuZmluZChOYXZpZ2F0aW9uSXRlbSkpLnRvSGF2ZUxlbmd0aCgyKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcmVuZGVyIHRocmVlIDxOYXZpZ2F0aW9uSXRlbSAvPiBlbGVtZW50cyBpZiBhdXRoZW50aWNhdGVkJywgKCkgPT4ge1xuICAgICAgICAvLyB3cmFwcGVyID0gc2hhbGxvdyg8TmF2aWdhdGlvbkl0ZW1zIGlzQXV0aGVudGljYXRlZCAvPik7XG4gICAgICAgIHdyYXBwZXIuc2V0UHJvcHMoeyBpc0F1dGhlbnRpY2F0ZWQ6IHRydWUgfSk7XG4gICAgICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoTmF2aWdhdGlvbkl0ZW0pKS50b0hhdmVMZW5ndGgoMyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGFuIGV4YWN0IGxvZ291dCBidXR0b24nLCAoKSA9PiB7XG4gICAgICAgIHdyYXBwZXIuc2V0UHJvcHMoeyBpc0F1dGhlbnRpY2F0ZWQ6IHRydWUgfSk7XG4gICAgICAgIGV4cGVjdCh3cmFwcGVyLmNvbnRhaW5zKDxOYXZpZ2F0aW9uSXRlbSBsaW5rPVwiL2xvZ291dFwiPkxvZ291dDwvTmF2aWdhdGlvbkl0ZW0+KSkudG9FcXVhbCh0cnVlKTtcbiAgICB9KTtcbn0pOyJdfQ==