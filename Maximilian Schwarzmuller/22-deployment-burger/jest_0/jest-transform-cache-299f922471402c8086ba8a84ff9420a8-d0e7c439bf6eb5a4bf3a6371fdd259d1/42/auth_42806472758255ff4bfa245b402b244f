c104c601799b4a15c6ff50c182edbe1b
"use strict";

var _interopRequireWildcard = require("/home/mijanur/MYCODE/JAVASCRIPT/REACTJS/react-courses-master/Maximilian Schwarzmuller/21-testing/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

var _utility = require("../../shared/utility");

const initialState = {
  token: null,
  userId: null,
  error: null,
  loading: false,
  authRedirectPath: '/'
};

const authStart = (state, action) => {
  return (0, _utility.updateObject)(state, {
    error: null,
    loading: true
  });
};

const authSuccess = (state, action) => {
  return (0, _utility.updateObject)(state, {
    token: action.idToken,
    userId: action.userId,
    error: null,
    loading: false
  });
};

const authFail = (state, action) => {
  return (0, _utility.updateObject)(state, {
    error: action.error,
    loading: false
  });
};

const authLogout = (state, action) => {
  return (0, _utility.updateObject)(state, {
    token: null,
    userId: null
  });
};

const setAuthRedirectPath = (state, action) => {
  return (0, _utility.updateObject)(state, {
    authRedirectPath: action.path
  });
};

const reducer = (state = initialState, action) => {
  switch (action.type) {
    case actionTypes.AUTH_START:
      return authStart(state, action);

    case actionTypes.AUTH_SUCCESS:
      return authSuccess(state, action);

    case actionTypes.AUTH_FAIL:
      return authFail(state, action);

    case actionTypes.AUTH_LOGOUT:
      return authLogout(state, action);

    case actionTypes.SET_AUTH_REDIRECT_PATH:
      return setAuthRedirectPath(state, action);

    default:
      return state;
  }
};

var _default = reducer;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiaW5pdGlhbFN0YXRlIiwidG9rZW4iLCJ1c2VySWQiLCJlcnJvciIsImxvYWRpbmciLCJhdXRoUmVkaXJlY3RQYXRoIiwiYXV0aFN0YXJ0Iiwic3RhdGUiLCJhY3Rpb24iLCJhdXRoU3VjY2VzcyIsImlkVG9rZW4iLCJhdXRoRmFpbCIsImF1dGhMb2dvdXQiLCJzZXRBdXRoUmVkaXJlY3RQYXRoIiwicGF0aCIsInJlZHVjZXIiLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJBVVRIX1NUQVJUIiwiQVVUSF9TVUNDRVNTIiwiQVVUSF9GQUlMIiwiQVVUSF9MT0dPVVQiLCJTRVRfQVVUSF9SRURJUkVDVF9QQVRIIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxNQUFNQSxZQUFZLEdBQUc7QUFDakJDLEVBQUFBLEtBQUssRUFBRSxJQURVO0FBRWpCQyxFQUFBQSxNQUFNLEVBQUUsSUFGUztBQUdqQkMsRUFBQUEsS0FBSyxFQUFFLElBSFU7QUFJakJDLEVBQUFBLE9BQU8sRUFBRSxLQUpRO0FBS2pCQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUxELENBQXJCOztBQVFBLE1BQU1DLFNBQVMsR0FBRyxDQUFDQyxLQUFELEVBQVFDLE1BQVIsS0FBbUI7QUFDakMsU0FBTywyQkFBYUQsS0FBYixFQUFvQjtBQUFFSixJQUFBQSxLQUFLLEVBQUUsSUFBVDtBQUFlQyxJQUFBQSxPQUFPLEVBQUU7QUFBeEIsR0FBcEIsQ0FBUDtBQUNILENBRkQ7O0FBSUEsTUFBTUssV0FBVyxHQUFHLENBQUNGLEtBQUQsRUFBUUMsTUFBUixLQUFtQjtBQUNuQyxTQUFPLDJCQUFhRCxLQUFiLEVBQW9CO0FBQ3ZCTixJQUFBQSxLQUFLLEVBQUVPLE1BQU0sQ0FBQ0UsT0FEUztBQUV2QlIsSUFBQUEsTUFBTSxFQUFFTSxNQUFNLENBQUNOLE1BRlE7QUFHdkJDLElBQUFBLEtBQUssRUFBRSxJQUhnQjtBQUl2QkMsSUFBQUEsT0FBTyxFQUFFO0FBSmMsR0FBcEIsQ0FBUDtBQU1ILENBUEQ7O0FBU0EsTUFBTU8sUUFBUSxHQUFHLENBQUNKLEtBQUQsRUFBUUMsTUFBUixLQUFtQjtBQUNoQyxTQUFPLDJCQUFhRCxLQUFiLEVBQW9CO0FBQ3ZCSixJQUFBQSxLQUFLLEVBQUVLLE1BQU0sQ0FBQ0wsS0FEUztBQUV2QkMsSUFBQUEsT0FBTyxFQUFFO0FBRmMsR0FBcEIsQ0FBUDtBQUlILENBTEQ7O0FBT0EsTUFBTVEsVUFBVSxHQUFHLENBQUNMLEtBQUQsRUFBUUMsTUFBUixLQUFtQjtBQUNsQyxTQUFPLDJCQUFhRCxLQUFiLEVBQW9CO0FBQUVOLElBQUFBLEtBQUssRUFBRSxJQUFUO0FBQWVDLElBQUFBLE1BQU0sRUFBRTtBQUF2QixHQUFwQixDQUFQO0FBQ0gsQ0FGRDs7QUFJQSxNQUFNVyxtQkFBbUIsR0FBRyxDQUFDTixLQUFELEVBQVFDLE1BQVIsS0FBbUI7QUFDM0MsU0FBTywyQkFBYUQsS0FBYixFQUFvQjtBQUFFRixJQUFBQSxnQkFBZ0IsRUFBRUcsTUFBTSxDQUFDTTtBQUEzQixHQUFwQixDQUFQO0FBQ0gsQ0FGRDs7QUFJQSxNQUFNQyxPQUFPLEdBQUcsQ0FBQ1IsS0FBSyxHQUFHUCxZQUFULEVBQXVCUSxNQUF2QixLQUFrQztBQUM5QyxVQUFRQSxNQUFNLENBQUNRLElBQWY7QUFDSSxTQUFLQyxXQUFXLENBQUNDLFVBQWpCO0FBQTZCLGFBQU9aLFNBQVMsQ0FBQ0MsS0FBRCxFQUFRQyxNQUFSLENBQWhCOztBQUM3QixTQUFLUyxXQUFXLENBQUNFLFlBQWpCO0FBQStCLGFBQU9WLFdBQVcsQ0FBQ0YsS0FBRCxFQUFRQyxNQUFSLENBQWxCOztBQUMvQixTQUFLUyxXQUFXLENBQUNHLFNBQWpCO0FBQTRCLGFBQU9ULFFBQVEsQ0FBQ0osS0FBRCxFQUFRQyxNQUFSLENBQWY7O0FBQzVCLFNBQUtTLFdBQVcsQ0FBQ0ksV0FBakI7QUFBOEIsYUFBT1QsVUFBVSxDQUFDTCxLQUFELEVBQVFDLE1BQVIsQ0FBakI7O0FBQzlCLFNBQUtTLFdBQVcsQ0FBQ0ssc0JBQWpCO0FBQXlDLGFBQU9ULG1CQUFtQixDQUFDTixLQUFELEVBQVFDLE1BQVIsQ0FBMUI7O0FBQ3pDO0FBQVMsYUFBT0QsS0FBUDtBQU5iO0FBUUgsQ0FURDs7ZUFXZVEsTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFjdGlvblR5cGVzIGZyb20gJy4uL2FjdGlvbnMvYWN0aW9uVHlwZXMnO1xuaW1wb3J0IHsgdXBkYXRlT2JqZWN0IH0gZnJvbSAnLi4vLi4vc2hhcmVkL3V0aWxpdHknO1xuXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gICAgdG9rZW46IG51bGwsXG4gICAgdXNlcklkOiBudWxsLFxuICAgIGVycm9yOiBudWxsLFxuICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgIGF1dGhSZWRpcmVjdFBhdGg6ICcvJ1xufVxuXG5jb25zdCBhdXRoU3RhcnQgPSAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgIHJldHVybiB1cGRhdGVPYmplY3Qoc3RhdGUsIHsgZXJyb3I6IG51bGwsIGxvYWRpbmc6IHRydWUgfSk7XG59O1xuXG5jb25zdCBhdXRoU3VjY2VzcyA9IChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgcmV0dXJuIHVwZGF0ZU9iamVjdChzdGF0ZSwge1xuICAgICAgICB0b2tlbjogYWN0aW9uLmlkVG9rZW4sXG4gICAgICAgIHVzZXJJZDogYWN0aW9uLnVzZXJJZCxcbiAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgfSk7XG59O1xuXG5jb25zdCBhdXRoRmFpbCA9IChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgcmV0dXJuIHVwZGF0ZU9iamVjdChzdGF0ZSwge1xuICAgICAgICBlcnJvcjogYWN0aW9uLmVycm9yLFxuICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgIH0pO1xufTtcblxuY29uc3QgYXV0aExvZ291dCA9IChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgcmV0dXJuIHVwZGF0ZU9iamVjdChzdGF0ZSwgeyB0b2tlbjogbnVsbCwgdXNlcklkOiBudWxsIH0pXG59XG5cbmNvbnN0IHNldEF1dGhSZWRpcmVjdFBhdGggPSAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgIHJldHVybiB1cGRhdGVPYmplY3Qoc3RhdGUsIHsgYXV0aFJlZGlyZWN0UGF0aDogYWN0aW9uLnBhdGggfSlcbn1cblxuY29uc3QgcmVkdWNlciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIGFjdGlvblR5cGVzLkFVVEhfU1RBUlQ6IHJldHVybiBhdXRoU3RhcnQoc3RhdGUsIGFjdGlvbik7XG4gICAgICAgIGNhc2UgYWN0aW9uVHlwZXMuQVVUSF9TVUNDRVNTOiByZXR1cm4gYXV0aFN1Y2Nlc3Moc3RhdGUsIGFjdGlvbik7XG4gICAgICAgIGNhc2UgYWN0aW9uVHlwZXMuQVVUSF9GQUlMOiByZXR1cm4gYXV0aEZhaWwoc3RhdGUsIGFjdGlvbik7XG4gICAgICAgIGNhc2UgYWN0aW9uVHlwZXMuQVVUSF9MT0dPVVQ6IHJldHVybiBhdXRoTG9nb3V0KHN0YXRlLCBhY3Rpb24pO1xuICAgICAgICBjYXNlIGFjdGlvblR5cGVzLlNFVF9BVVRIX1JFRElSRUNUX1BBVEg6IHJldHVybiBzZXRBdXRoUmVkaXJlY3RQYXRoKHN0YXRlLCBhY3Rpb24pO1xuICAgICAgICBkZWZhdWx0OiByZXR1cm4gc3RhdGU7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCByZWR1Y2VyOyJdfQ==