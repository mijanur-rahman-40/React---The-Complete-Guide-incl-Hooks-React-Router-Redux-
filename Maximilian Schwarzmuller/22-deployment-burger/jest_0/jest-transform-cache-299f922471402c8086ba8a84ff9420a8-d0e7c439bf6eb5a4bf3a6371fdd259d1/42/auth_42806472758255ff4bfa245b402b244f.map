{"version":3,"sources":["auth.js"],"names":["initialState","token","userId","error","loading","authRedirectPath","authStart","state","action","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","reducer","type","actionTypes","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,gBAAgB,EAAE;AALD,CAArB;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAO,2BAAaD,KAAb,EAAoB;AAAEJ,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAApB,CAAP;AACH,CAFD;;AAIA,MAAMK,WAAW,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAO,2BAAaD,KAAb,EAAoB;AACvBN,IAAAA,KAAK,EAAEO,MAAM,CAACE,OADS;AAEvBR,IAAAA,MAAM,EAAEM,MAAM,CAACN,MAFQ;AAGvBC,IAAAA,KAAK,EAAE,IAHgB;AAIvBC,IAAAA,OAAO,EAAE;AAJc,GAApB,CAAP;AAMH,CAPD;;AASA,MAAMO,QAAQ,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAChC,SAAO,2BAAaD,KAAb,EAAoB;AACvBJ,IAAAA,KAAK,EAAEK,MAAM,CAACL,KADS;AAEvBC,IAAAA,OAAO,EAAE;AAFc,GAApB,CAAP;AAIH,CALD;;AAOA,MAAMQ,UAAU,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAClC,SAAO,2BAAaD,KAAb,EAAoB;AAAEN,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAApB,CAAP;AACH,CAFD;;AAIA,MAAMW,mBAAmB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAO,2BAAaD,KAAb,EAAoB;AAAEF,IAAAA,gBAAgB,EAAEG,MAAM,CAACM;AAA3B,GAApB,CAAP;AACH,CAFD;;AAIA,MAAMC,OAAO,GAAG,CAACR,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACQ,IAAf;AACI,SAAKC,WAAW,CAACC,UAAjB;AAA6B,aAAOZ,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAC7B,SAAKS,WAAW,CAACE,YAAjB;AAA+B,aAAOV,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AAC/B,SAAKS,WAAW,CAACG,SAAjB;AAA4B,aAAOT,QAAQ,CAACJ,KAAD,EAAQC,MAAR,CAAf;;AAC5B,SAAKS,WAAW,CAACI,WAAjB;AAA8B,aAAOT,UAAU,CAACL,KAAD,EAAQC,MAAR,CAAjB;;AAC9B,SAAKS,WAAW,CAACK,sBAAjB;AAAyC,aAAOT,mBAAmB,CAACN,KAAD,EAAQC,MAAR,CAA1B;;AACzC;AAAS,aAAOD,KAAP;AANb;AAQH,CATD;;eAWeQ,O","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null })\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;"]}