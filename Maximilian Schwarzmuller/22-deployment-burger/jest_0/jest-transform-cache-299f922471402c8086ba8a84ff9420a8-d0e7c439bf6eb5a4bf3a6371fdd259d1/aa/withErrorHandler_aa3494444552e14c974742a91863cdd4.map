{"version":3,"sources":["withErrorHandler.js"],"names":["withErrorHandler","WrappedComponent","axios","Component","state","error","errorConfirmHandler","setState","componentWillMount","requestInterceptor","interceptors","request","use","responseInterceptor","response","componentWillUnmount","eject","render","color","message","props"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA;AACA,MAAMA,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AAClD;AACA,iBAAO,cAAcC,gBAAd,CAAwB;AAAA;AAAA;AAAA,WAE3BC,KAF2B,GAEnB;AACJC,QAAAA,KAAK,EAAE;AADH,OAFmB;;AAAA,WA4B3BC,mBA5B2B,GA4BL,MAAM;AACxB,aAAKC,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OA9B0B;AAAA;;AAM3BG,IAAAA,kBAAkB,GAAG;AACjB,WAAKC,kBAAL,GAA0BP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BD,OAAO,IAAI;AAChE,aAAKJ,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOM,OAAP;AACH,OAHyB,CAA1B;AAKA,WAAKE,mBAAL,GAA2BX,KAAK,CAACQ,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CAAgCE,QAAQ,IAAIA,QAA5C,EAAsDT,KAAK,IAAI;AACtF,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACH,OAF0B,CAA3B;AAGH,KAf0B,CAiB3B;;;AACAU,IAAAA,oBAAoB,GAAG;AACnB;AACA;AACA;AACA;AAEAb,MAAAA,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BK,KAA3B,CAAiC,KAAKP,kBAAtC;AACAP,MAAAA,KAAK,CAACQ,YAAN,CAAmBI,QAAnB,CAA4BE,KAA5B,CAAkC,KAAKH,mBAAvC;AACH;;AAKDI,IAAAA,MAAM,GAAG;AACL,aACI,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,cAAD;AACI,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,KADrB;AAEI,QAAA,WAAW,EAAE,KAAKC,mBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAK,QAAA,KAAK,EAAE;AAACY,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKd,KAAL,CAAWC,KAAX,GACxB,KAAKD,KAAL,CAAWC,KAAX,CAAiBc,OADO,GAEtB,IAFN,CAHJ,CADJ,EASI,6BAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATJ,CADJ;AAaH;;AA7C0B,GAA/B;AA+CH,CAjDD;;eAmDepB,gB","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport Modal from '../../components/UI/Modal/Modal';\n\n// this whole process, basically a global error handling \n// wrapping with higher order component\nconst withErrorHandler = (WrappedComponent, axios) => {\n    // anonymous class\n    return class extends Component {\n\n        state = {\n            error: null\n        }\n\n        componentWillMount() {\n            this.requestInterceptor = axios.interceptors.request.use(request => {\n                this.setState({ error: null });\n                return request;\n            });\n\n            this.responseInterceptor = axios.interceptors.response.use(response => response, error => {\n                this.setState({ error: error })\n            });\n        }\n\n        // clean up the Interceptor\n        componentWillUnmount() {\n            // the output value are 0,0\n            // because request index is 0 -> starting index (the number of) of requestInterceptor\n            // because request index is 0 -> starting index (the number of) of responseInterceptor\n            // console.log('Will Unmount', this.requestInterceptor, this.responseInterceptor);\n\n            axios.interceptors.request.eject(this.requestInterceptor);\n            axios.interceptors.response.eject(this.responseInterceptor);\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({ error: null })\n        }\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmHandler}  >\n                        <big style={{color:'red'}}>{this.state.error ?\n                            this.state.error.message\n                            : null\n                        }</big>\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    };\n};\n\nexport default withErrorHandler;"]}